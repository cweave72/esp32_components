/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_PROTORPC_PB_H_INCLUDED
#define PB_PROTORPC_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _StatusEnum {
    StatusEnum_RPC_SUCCESS = 0,
    StatusEnum_RPC_BAD_RESOLVER_LOOKUP = 1,
    StatusEnum_RPC_BAD_HANDLER_LOOKUP = 2,
    StatusEnum_RPC_HANDLER_ERROR = 3
} StatusEnum;

/* Struct definitions */
typedef struct _ProtoRpcHeader {
    uint32_t seqn;
    bool no_reply;
    StatusEnum status;
} ProtoRpcHeader;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _StatusEnum_MIN StatusEnum_RPC_SUCCESS
#define _StatusEnum_MAX StatusEnum_RPC_HANDLER_ERROR
#define _StatusEnum_ARRAYSIZE ((StatusEnum)(StatusEnum_RPC_HANDLER_ERROR+1))

#define ProtoRpcHeader_status_ENUMTYPE StatusEnum


/* Initializer values for message structs */
#define ProtoRpcHeader_init_default              {0, 0, _StatusEnum_MIN}
#define ProtoRpcHeader_init_zero                 {0, 0, _StatusEnum_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define ProtoRpcHeader_seqn_tag                  1
#define ProtoRpcHeader_no_reply_tag              2
#define ProtoRpcHeader_status_tag                3

/* Struct field encoding specification for nanopb */
#define ProtoRpcHeader_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   seqn,              1) \
X(a, STATIC,   SINGULAR, BOOL,     no_reply,          2) \
X(a, STATIC,   SINGULAR, UENUM,    status,            3)
#define ProtoRpcHeader_CALLBACK NULL
#define ProtoRpcHeader_DEFAULT NULL

extern const pb_msgdesc_t ProtoRpcHeader_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ProtoRpcHeader_fields &ProtoRpcHeader_msg

/* Maximum encoded size of messages (where known) */
#define ProtoRpcHeader_size                      10

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
